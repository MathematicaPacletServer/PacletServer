(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



BeginPackage["SharedPacletServer`"];


SharedPacletServerRebuild::usage=
	"Rebuilds and pushes the paclet server";


BeginPackage["`Package`"];


SharedPacletServerAddPaclets::usage="";
SharedPacletServerBuild::usage="";
SharedPacletServerTest::usage="";
SharedPacletServerPush::usage="";


EndPackage[];


Begin["`Private`"];


$PacletServerAddAsSite=False;
Internal`WithLocalSettings[
	If[
		Set[
			$PacletServerAddAsSite,
			Not@
				MemberQ[
					PacletSites[], 
					PacletSite["http://raw.githubusercontent.com/paclets/PacletServer/master", __]
					]
			],
		PacletManager`PacletSiteAdd[
			"http://raw.githubusercontent.com/paclets/PacletServer/master"
			];
		],
	PacletManager`PacletCheckUpdate[
		"BTools"
		],
	If[$PacletServerAddAsSite, 
		PacletManager`PacletSiteRemove[
			"http://raw.githubusercontent.com/paclets/PacletServer/master"
			]
		]
	]


<<BTools`External`
<<BTools`Paclets`


$ToAddDir=
	ParentDirectory@DirectoryName@$InputFileName;


$PacletServerDir=
	Nest[ParentDirectory, DirectoryName@$InputFileName, 2];


Clear[
	SharedPacletServerAddPaclets, 
	SharedPacletServerBuild, 
	SharedPacletServerPush,
	SharedPacletServerRebuild
	]


SharedPacletServerAddPaclets[ops:OptionsPattern[]]:=
	Map[
		Function[
			With[{psa=
				PacletServerAdd[$PacletServerDir, #, 
					FilterRules[{ops}, Options[PacletServerAdd]]
					]},
				CopyFile[#, 
					FileNameJoin@{DirectoryName[#], "last_build", FileNameTake[#]},
					OverwriteTarget->True
					]->
				(DeleteFile[#];psa)
				]
			],
		Join[
			Select[
				FileExistsQ[FileNameJoin[{#, "PacletInfo.m"}]]||
					FileExistsQ[FileNameJoin[{#, FileBaseName[#]<>".m"}]]&
				]@
				FileNames[
					"*",
					$ToAddDir
					],
			FileNames[
				"*.paclet",
				$ToAddDir
				]
			]
		];


SharedPacletServerBuild[ops:OptionsPattern[]]:=
	PacletServerBuild[$PacletServerDir,
	 FilterRules[{ops}, Options[PacletServerBuild]]
	 ];


SharedPacletServerPush[ops:OptionsPattern[]]:=
	With[{dir=$PacletServerDir},
		Git["Commit", 
			dir,
			FilterRules[
				{
					ops,
					"Message"->TemplateApply["Rebuilt on ``", DateString[]],
					"All"->True
					},
				Git["Commit", "Options"]
				]
			];
		GitHub["Push", dir]
		];


SharedPacletServerTest[]:=
	PySimpleServerOpen[
		PacletServerExecute["Path", $PacletServerDir, "docs"]
		]


$ServerRebuildKeys=
	"Add"|"Build"|"Push"|"Test";


SharedPacletServerRebuild[do:{$ServerRebuildKeys..}:{"Add", "Build", "Push"},
	ops:OptionsPattern[]
	]:=
	Block[
		{
			res=<||>
			},
		If[MemberQ[do, "Add"],
			PrintTemporary[Internal`LoadingPanel["Adding paclets..."]];
			res["Add"]=
				SharedPacletServerAddPaclets[ops]
			];
		If[MemberQ[do, "Build"],
			PrintTemporary[Internal`LoadingPanel["Building pages..."]];
			res["Build"]=
				SharedPacletServerBuild[ops]
			];
		If[MemberQ[do, "Test"],
			SharedPacletServerTest[]
			];
		If[MemberQ[do, "Push"],
			PrintTemporary[Internal`LoadingPanel["Pushing to GitHub..."]];
			res["Push"]=
				SharedPacletServerPush[ops]
			];
		res
		];
SharedPacletServerRebuild[do:$ServerRebuildKeys, 
	ops:OptionsPattern[]
	]:=
	SharedPacletServerRebuild[{do}, ops]


End[];


EndPackage[];



